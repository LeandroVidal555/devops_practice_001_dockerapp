# WIP
name: Prod Build & Push

on:
  pull_request:
    branches: [ main ]
    types: [ closed ]

permissions:
  id-token: write
  contents: read

env:
  AWS_REGION: us-east-1
  PROD_AWS_ACCOUNT_ID: ${{ secrets.PROD_AWS_ACCOUNT_ID }}
  PROD_ECR_REPO: my-app-prod                  # <-- change as needed
  ECR_REGISTRY: ${{ secrets.PROD_AWS_ACCOUNT_ID }}.dkr.ecr.${{ env.AWS_REGION }}.amazonaws.com
  IMAGE: ${{ env.ECR_REGISTRY }}/${{ env.PROD_ECR_REPO }}

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
      - name: Merged PR from dev only
        id: guard
        run: |
          if [ "${{ github.event.pull_request.merged }}" != "true" ]; then
            echo "PR not merged; exiting."
            exit 1
          fi
          if [ "${{ github.event.pull_request.base.ref }}" != "main" ]; then
            echo "Base is not main; exiting."
            exit 1
          fi
          if [ "${{ github.event.pull_request.head.ref }}" != "dev" ]; then
            echo "Head is not dev; exiting."
            exit 1
          fi

      - name: Checkout (full history to inspect tags)
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ref: ${{ github.event.pull_request.merge_commit_sha }}

      - name: Ensure merged head is tagged vX.Y.Z
        id: version
        run: |
          HEAD_SHA="${{ github.event.pull_request.head.sha }}"
          # list tags pointing at the PR head sha
          TAGS=$(git tag --points-at "$HEAD_SHA" | tr -d '\r')
          if ! echo "$TAGS" | grep -E '^v[0-9]+\.[0-9]+\.[0-9]+$' >/dev/null; then
            echo "Merged head ($HEAD_SHA) lacks a vX.Y.Z tag; refusing prod release."
            echo "Found tags: $TAGS"
            exit 1
          fi
          TAG=$(echo "$TAGS" | grep -E '^v[0-9]+\.[0-9]+\.[0-9]+$' | head -n1)
          VERSION="${TAG#v}"
          MAJOR="${VERSION%%.*}"
          MINOR="${VERSION%.*}"
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          echo "major=$MAJOR"     >> $GITHUB_OUTPUT
          echo "minor=$MINOR"     >> $GITHUB_OUTPUT

      - name: Configure AWS credentials (OIDC)
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: ${{ env.AWS_REGION }}
          role-to-assume: arn:aws:iam::${{ env.PROD_AWS_ACCOUNT_ID }}:role/gh-actions-ecr  # pre-create this role

      - name: Login to ECR
        uses: aws-actions/amazon-ecr-login@v2

      - name: Set up Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build & Push to PROD ECR
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          tags: |
            ${{ env.IMAGE }}:${{ steps.version.outputs.version }}
            ${{ env.IMAGE }}:${{ steps.version.outputs.minor }}
            ${{ env.IMAGE }}:${{ steps.version.outputs.major }}
            ${{ env.IMAGE }}:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max